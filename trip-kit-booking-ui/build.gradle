apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion versions.compileSdkVersion

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion versions.targetSdkVersion
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  dataBinding { enabled = true }
  lintOptions {
    checkReleaseBuilds true
    abortOnError false
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}

dependencies {
  testImplementation libs.junit
  testImplementation libs.assertjCore
  testImplementation libs.mockitoCore
  testImplementation libs.robolectric
  testImplementation libs.mockitoKotlin, { exclude group: 'org.jetbrains.kotlin' }

  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0', {
    exclude group: 'com.android.support', module: 'support-annotations'
  }

  implementation project(':TripKitAndroid')
  implementation project(':CommonCoreLegacy')
  implementation project(':trip-kit-booking')

  implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
  implementation 'com.github.skedgo:robotos:v1.1'

  implementation libs.dagger
  kapt libs.daggerCompiler

  implementation 'com.squareup.picasso:picasso:2.5.2'
  implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
  implementation libs.bindingCollectionAdapterRecyclerView
  implementation libs.rxLifecycleComponents
  implementation 'com.trello:rxlifecycle:1.0'

  implementation libs.kotlin
  implementation libs.gson
  implementation libs.rxjava
  implementation libs.rxAndroid

}



// build a jar with source files
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  failOnError  false
  source = android.sourceSets.main.java.sourceFiles
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

group = tripkitGroup
version = tripkitVersion

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "file://${localMaven}")
      pom.groupId = tripkitGroup
      pom.version = tripkitVersion
    }
  }
}