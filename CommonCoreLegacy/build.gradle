apply plugin: "com.android.library"
// To publish via JitPack.
// See https://jitpack.io/docs/ANDROID/.
apply plugin: 'digital.wup.android-maven-publish'
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"


android {
  compileSdkVersion versions.compileSdkVersion

  defaultConfig {
    minSdkVersion versions.proMinSdkVersion
    targetSdkVersion versions.targetSdkVersion
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }

  buildTypes {
    release {
      consumerProguardFile 'proguard-rules.pro'
    }
  }

  lintOptions {
    checkReleaseBuilds true
    abortOnError false
  }
}

dependencies {
  androidTestImplementation libs.assertjCore
  androidTestImplementation 'androidx.test:runner:1.1.0'
  androidTestImplementation 'androidx.test:rules:1.1.0'

  testImplementation libs.junit
  testImplementation libs.assertjCore
  testImplementation libs.robolectric
  testImplementation 'commons-io:commons-io:2.5'
  testImplementation libs.mockitoKotlin
  testImplementation libs.mockitoCore
  testImplementation libs.jodaTimeTzdb
  testImplementation libs.kluent
  testImplementation libs.androidxTesting

  implementation libs.supportAnnotations
  implementation libs.jodaTimeAndroid
  implementation libs.rxjava2
  implementation libs.rxAndroid2
  implementation libs.gson
  implementation 'com.github.skedgo:commons-collections:v1.0'

  implementation project(':TripKitDomain')
  implementation libs.kotlin

  kapt libs.value
  compileOnly libs.valueAnnotations
  compileOnly libs.builderAnnotations
  implementation libs.immutablesGson
}


// build a jar with source files
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  failOnError  false
  source = android.sourceSets.main.java.sourceFiles
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}
group = tripkitGroup
version = tripkitVersion

publishing {
  repositories {
    maven {
      url = "file://${localMaven}"
      //url = publishMavenUrl
      credentials {
        username = publishMavenUsername
        password = publishMavenToken
      }
    }
  }

  publications {
    mavenAar(MavenPublication) {
      groupId = group
      version = version
      from components.android
      pom {
        licenses {
          license {
            name = 'Commercial'
          }
        }
      }
    }
  }
}

