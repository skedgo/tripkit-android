apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'digital.wup.android-maven-publish'

android {
  compileSdkVersion versions.compileSdkVersion

  defaultConfig {
    minSdkVersion versions.proMinSdkVersion
    targetSdkVersion versions.targetSdkVersion
  }

  lintOptions {
    // Changing to warning because of https://github.com/square/okio/issues/58.
    warning 'InvalidPackage'
  }
}

dependencies {
  testImplementation libs.junit
  testImplementation libs.robolectric
  testImplementation libs.mockitoKotlin
  testImplementation libs.assertjCore
  testImplementation libs.androidxTesting
  testImplementation libs.androidxJUnitExtTesting

  implementation libs.rxjava
  implementation libs.retrofit
  implementation libs.retrofitConverterGson
  implementation libs.retrofitAdapterRxJava
  implementation libs.gson

  implementation libs.dagger
  kapt libs.daggerCompiler

  kapt libs.value
  compileOnly libs.valueAnnotations
  compileOnly libs.builderAnnotations
  implementation libs.immutablesGson

  implementation libs.kotlin
  implementation project(':TripKitDomain')
  implementation project(':ValidBookingCountDomain')
}

// build a jar with source files
task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  failOnError false
  source = android.sourceSets.main.java.sourceFiles
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

group = tripkitGroup
version = tripkitVersion

publishing {
  repositories {
    maven { url = "file://${localMaven}" }
  }
  publications {
    mavenAar(MavenPublication) {
      groupId = group
      version = version
      from components.android
    }
  }
}