apply plugin: "com.android.library"
apply plugin: "com.github.dcendents.android-maven"
apply plugin: 'com.neenbedankt.android-apt'

group = "com.skedgo.sdk"
version = "1.1b6"

android {
  compileSdkVersion rootProject.ext.CompileSdkVersion
  buildToolsVersion rootProject.ext.BuildToolsVersion

  defaultConfig {
    minSdkVersion 10
    targetSdkVersion 22
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  packagingOptions {
    // To avoid conflicts between Mockito and AssertJ.
    exclude "LICENSE"
    exclude "NOTICE"
    exclude "asm-license.txt"

    // To avoid conflicts with ASL.
    // We don't utilize ServiceLoader, so this is unneeded.
    exclude 'META-INF/services/com.google.gson.TypeAdapterFactory'
  }
}

// Generation relative to tripgo! Add translations repo to tripkit?
task(generateTripkitStrings, type: org.gradle.api.tasks.JavaExec) {
  classpath(files('IOStoAndroidStringsConverter.jar'))
  main('com.skedgo.tripgo.tools.android.Main')
  args(['./src/main/res', '../../libraries/translations', 'void',
        'en#es#de#fi#pt#zh-Hant#zh-Hans', 'Tripkit.strings'])
}

dependencies {
  testCompile "junit:junit:4.12"
  testCompile "org.assertj:assertj-core:1.7.0"
  testCompile "org.mockito:mockito-core:1.10.5"
  testCompile "org.robolectric:robolectric:3.0"
  testCompile 'com.squareup.okhttp3:mockwebserver:3.2.0'
  testCompile 'commons-io:commons-io:2.5'
  testCompile project(':libraries:common-test-utils')

  // To take advantage of AndroidJUnitRunner.
  androidTestCompile "com.android.support.test:runner:${rootProject.ext.SupportTestRunnerVersion}"
  androidTestCompile "com.android.support.test:rules:${rootProject.ext.SupportTestRunnerVersion}"

  // To use Mockito in Android"s instrumentation tests.
  androidTestCompile "org.assertj:assertj-core:1.7.0"
  androidTestCompile "org.mockito:mockito-core:1.10.5"
  androidTestCompile "com.crittercism.dexmaker:dexmaker:1.4"
  androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:1.4"
  androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:1.4"

  compile project(":libraries:android-shared-lib")
  compile "com.google.android.gms:play-services-gcm:${rootProject.ext.PlayServicesVersion}"

  apt "org.immutables:value:${rootProject.ext.ImmutablesVersion}"
  apt "org.immutables:gson:${rootProject.ext.ImmutablesVersion}"
  provided "org.immutables:gson:${rootProject.ext.ImmutablesVersion}"
  provided "org.immutables:value:${rootProject.ext.ImmutablesVersion}"
  provided "org.immutables:builder:${rootProject.ext.ImmutablesVersion}"

  compile 'com.github.skedgo:sqlite-utils:v1.0'
  compile "com.squareup.okhttp3:okhttp:${rootProject.ext.OkHttp3Version}"
  compile "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.OkHttp3Version}"
  compile "com.squareup.retrofit2:converter-gson:${rootProject.ext.RetrofitVersion}"
  compile("com.squareup.retrofit2:adapter-rxjava:${rootProject.ext.RetrofitVersion}") {
    exclude module: 'rxjava'
  }
  compile("com.squareup.retrofit2:retrofit:${rootProject.ext.RetrofitVersion}") {
    // Exclude Retrofitâ€™s OkHttp peer-dependency module and define our own module import.
    exclude module: 'okhttp'
  }

  // For dependency injection with Dagger 2.
  compile 'com.google.dagger:dagger:2.0.1'
  apt 'com.google.dagger:dagger-compiler:2.0.1'
  provided 'org.glassfish:javax.annotation:10.0-b28'
}

/**
 * Run with "gradlew clean test assemble uploadArchives"
 */
uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "file://${TripKitMaven}")
    }
  }
}